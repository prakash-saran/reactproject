{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","id","name","email","className","alt","src","width","height","CardList","robots","cardsArray","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","fileterdRobots","this","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCWCQ,MAlBf,SAAeC,GACX,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACI,sBACAC,UAAU,sDADV,UAEI,qBAAKC,IAAI,QACTC,IAAG,mCAAgCL,EAAhC,YACHM,MAAM,MACNC,OAAO,QAEP,gCACI,6BAAMN,IACN,4BAAKC,WCONM,MAjBf,YAAgC,IAAXC,EAAU,EAAVA,OACXC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OAAO,cAAC,EAAD,CAEPb,GAAIS,EAAOI,GAAGb,GACdC,KAAMQ,EAAOI,GAAGZ,KAChBC,MAAOO,EAAOI,GAAGX,OAHZW,MAOT,OACI,8BACMH,KCDCI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGPI,EARA,SAACrB,GACZ,OACI,qBAAKsB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBhB,OAAQ,SAArE,SACKR,EAAMyB,YCuCJC,E,kDArCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEb,YAAaY,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRM,YAAa,IAJP,E,qDAOd,WAAqB,IAAD,OAChBiB,MAAM,8CACDxC,MAAK,SAAAyC,GAAQ,OAAIA,EAASC,UAC1B1C,MAAK,SAAA2C,GAAK,OAAI,EAAKP,SAAS,CAACnB,OAAQ0B,S,oBAS9C,WAAU,IAAD,OACCC,EAAiBC,KAAKN,MAAMtB,OAAO6B,QAAO,SAAA7B,GAC5C,OAAOA,EAAOR,KAAKsC,cAAcC,SAAS,EAAKT,MAAMhB,YAAYwB,kBAErE,OACI,sBAAKpC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWa,aAAcqB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CACAjB,OAAQ2B,a,GA9BVK,aCGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.7a20ae69.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function Card (props) {\r\n    const { id, name, email } = props;\r\n    return (\r\n        <div \r\n        className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\r\n            <img alt='robot' \r\n            src= { `https://robohash.org/test${id}?200x200` } \r\n            width='200' \r\n            height='200' \r\n            />\r\n            <div>\r\n                <h2>{ name }</h2>\r\n                <p>{ email }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nfunction CardList ({ robots }) {\r\n    const cardsArray = robots.map((user, i) => {\r\n        return <Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} \r\n        />  \r\n    })\r\n    \r\n    return (\r\n        <div>\r\n            { cardsArray }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","const SearchBox = ({searchField, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport React, { Component } from 'react';\r\nimport Scroll from './Scroll';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=>  response.json())\r\n            .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const fileterdRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        return (\r\n            <div className='tc'>\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardList \r\n                    robots={fileterdRobots} \r\n                    />\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}